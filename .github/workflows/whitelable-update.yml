name: Release

# on:
#   push:
#     tags:
#       - '*'
#     branches: [main]

# env:
#   DAY_OF_WEEK: Monday

# jobs:
#   greeting_job:
#     runs-on: ubuntu-latest
#     env:
#       Greeting: Hello
#     steps:
#       - name: "Say Hello Mona it's Monday"
#         if: ${{ env.DAY_OF_WEEK == 'Monday' }}
#         run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
#         env:
#           First_Name: Mona

# name: Release

on:
  push:
    tags:
      - '*'
    branches: [main]
  repository_dispatch:
    types: [whitelabel-update]
    

      
# #   release:
# #     types: [created]

jobs:
  set_tag:
    name: Set latest Tag
    runs-on: ubuntu-latest
    env:
      LATEST_TAG: MyTag
      
    steps:
      - uses: actions/checkout@v2
        
      - name: Set tag previous
        run: echo "${GITHUB_REF#refs/tags/}"
        
      - name: show tag previous
        run: echo "$LATEST_TAG"
        
      - name: Update Tag
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "$(git describe --tags `git rev-list --tags --max-count=1`)" >> LATEST_TAG 
        
      - name: show tag after
        run: echo "$LATEST_TAG"
        
#   get_tag:
#     name: Update Tags
#     needs: [set_tag]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: show tag
#         run: echo "${env.LATEST_TAG}"
    
    
#     outputs:
#       latest_tag: ${{ steps.latest_tag.outputs.LATEST_RELEASE_TAG }}
#     steps:
#       - uses: actions/checkout@v2

#       - id: latest_tag
#         run: echo "::set-output name=LATEST_RELEASE_TAG::$(git describe --tags `git rev-list --tags --max-count=1`)"
      
#       - name: show tag
#         run: echo "${GITHUB_REF#refs/tags/}"
      
#       - name: set url
#         run: url=https://downloads.celerispay.com/uploads/external_chargeback.sql.gz
      
#       - name: Generate Artifact
#         run: |
#           echo "https://downloads.celerispay.com/uploads/external_chargeback.sql.gz" >> url
        
#       - uses: actions/upload-artifact@v2
#         name: Upload Artifact
#         with:
#           name: url
#           path: url
          
#   github-release:
#     name: Github Release
#     runs-on: ubuntu-latest
#     needs: [set_tag]
#     steps:
#       - uses: actions/download-artifact@v2
#         with:
#           name: url

#       - id: releaseprep
#         run: |
#           cat >$CHANGELOG <<-EOD
#           Release ${{needs.set_tag.outputs.latest_tag}}
#           Downloads available:
#           EOD
#           cat url >> $CHANGELOG
#         env:
#           CHANGELOG: release.txt

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           body_path: release.txt
#           tag_name: ${{ needs.set_tag.outputs.latest_tag }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   get_tag:
#     name: Update Tags
#     needs: [set_tag]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
      
#       - name: Get Latest Tag
#         run: echo "${{needs.set_tag.outputs.latest_tag}}"

#         run: echo "$(git describe --tags `git rev-list --tags --max-count=1`)"

